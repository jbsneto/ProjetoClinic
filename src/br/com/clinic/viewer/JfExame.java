/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.clinic.viewer;

import br.com.clinic.facade.Facade;
import br.com.clinic.model.ExameCliente;
import br.com.clinic.model.Funcionario;
import br.com.clinic.model.Lancamento;
import br.com.clinic.model.LogExame;
import br.com.clinic.util.Util;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author GENPAC
 */
public class JfExame extends javax.swing.JFrame {

    
    private Facade facade;
    private Funcionario funcionario;
    private ExameCliente exameCliente;
    private LogExame log;
    
    public JfExame() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Tela Exame");
        
        facade = new Facade();
        
        jtPesquisa.setEditable(false);
        jtFuncionario.setEditable(false);
        jtFuncionarioCargo.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jbPesquisar = new javax.swing.JButton();
        jtPesquisa = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jtFuncionario = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtFuncionarioCargo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jcbFiltro = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jbExaminado = new javax.swing.JButton();
        jbExtraviado = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Funcionario responsÃ¡vel:");

        jbPesquisar.setText("Pesquisar");
        jbPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPesquisarActionPerformed(evt);
            }
        });

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Data", "Urgencia", "Cliente", "Exame", "Status"
            }
        ));
        jTable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTableFocusLost(evt);
            }
        });
        jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable);
        if (jTable.getColumnModel().getColumnCount() > 0) {
            jTable.getColumnModel().getColumn(0).setMinWidth(40);
            jTable.getColumnModel().getColumn(0).setPreferredWidth(40);
            jTable.getColumnModel().getColumn(0).setMaxWidth(40);
            jTable.getColumnModel().getColumn(1).setMinWidth(80);
            jTable.getColumnModel().getColumn(1).setPreferredWidth(80);
            jTable.getColumnModel().getColumn(1).setMaxWidth(80);
            jTable.getColumnModel().getColumn(2).setMinWidth(65);
            jTable.getColumnModel().getColumn(2).setPreferredWidth(65);
            jTable.getColumnModel().getColumn(2).setMaxWidth(65);
            jTable.getColumnModel().getColumn(3).setMinWidth(120);
            jTable.getColumnModel().getColumn(3).setPreferredWidth(120);
            jTable.getColumnModel().getColumn(3).setMaxWidth(120);
            jTable.getColumnModel().getColumn(5).setMinWidth(100);
            jTable.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTable.getColumnModel().getColumn(5).setMaxWidth(100);
        }

        jLabel2.setText("Cargo:");

        jLabel3.setText("Filtro");

        jcbFiltro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todos", "Pendentes", "Coletados", "Examinados", "Entregues", "Extaviados", " " }));

        jLabel4.setText("Pesquisa:");

        jbExaminado.setText("Examinado");
        jbExaminado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExaminadoActionPerformed(evt);
            }
        });

        jbExtraviado.setText("Extraviado");
        jbExtraviado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExtraviadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbFiltro, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jtFuncionario)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtFuncionarioCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtPesquisa)
                                .addGap(18, 18, 18)
                                .addComponent(jbPesquisar)))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jbExtraviado)
                .addGap(60, 60, 60)
                .addComponent(jbExaminado)
                .addGap(189, 189, 189))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jtFuncionarioCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbPesquisar)
                    .addComponent(jLabel3)
                    .addComponent(jcbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbExaminado)
                    .addComponent(jbExtraviado))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPesquisarActionPerformed
        try {
            if(this.jcbFiltro.getSelectedIndex() == 0)
                preencherLista();
            if(this.jcbFiltro.getSelectedIndex() == 1)
                preencherListaPendente();
            if(this.jcbFiltro.getSelectedIndex() == 2)
                preencherListaColetado();
            if(this.jcbFiltro.getSelectedIndex() == 3)
                preencherListaExaminado();
            if(this.jcbFiltro.getSelectedIndex() == 4)
                preencherListaEntregue();
            if(this.jcbFiltro.getSelectedIndex() == 5)
                preencherListaExtraviado();
        } catch (Exception ex) {
            ex.printStackTrace();
            System.out.println("ERROR: " + ex.getMessage());
        }
    }//GEN-LAST:event_jbPesquisarActionPerformed

    private void jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouseClicked

    }//GEN-LAST:event_jTableMouseClicked

    private void jbExtraviadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExtraviadoActionPerformed
        try{
            
            int result = JOptionPane.showConfirmDialog(null,"Deseja mudar o status do Exame para Extraviado?", "Confirmar", JOptionPane.YES_NO_OPTION);
            if(result == JOptionPane.YES_OPTION){
                int index = this.jTable.getSelectedRow();
                String idString = this.jTable.getValueAt(index, 0).toString();
                long idExame = Long.parseLong(idString);
                exameCliente = facade.exameClienteBuscar(idExame);
                if(!exameCliente.getStatus().equals(Util.getStatusExtraviado())){
                    log = new LogExame(funcionario, exameCliente, exameCliente.getStatus(),Util.getStatusExtraviado());
                    facade.cadastraLog(log);

                    exameCliente.setStatusExtraviado();
                    facade.exameClienteEditar(exameCliente);
                    JOptionPane.showMessageDialog(null, "Status alterado com sucesso");
                }else{
                    JOptionPane.showMessageDialog(null, "O exame estÃ¡ extraviado, aguardando outra coleta");
                }
            }else
                JOptionPane.showMessageDialog(null, "Status nÃ£o alterado");
        }catch (Exception e){
            e.printStackTrace();
            System.out.println("error:" + e.getMessage());
        }
    }//GEN-LAST:event_jbExtraviadoActionPerformed

    private void jTableFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTableFocusLost

    }//GEN-LAST:event_jTableFocusLost

    private void jbExaminadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExaminadoActionPerformed
        try{
            
            int result = JOptionPane.showConfirmDialog(null,"Deseja mudar o status do Exame para Examinado?", "Confirmar", JOptionPane.YES_NO_OPTION);
            if(result == JOptionPane.YES_OPTION){
                int index = this.jTable.getSelectedRow();
                String idString = this.jTable.getValueAt(index, 0).toString();
                long idExame = Long.parseLong(idString);
                exameCliente = facade.exameClienteBuscar(idExame);
                if(exameCliente.getStatus().equals(Util.getStatusColetado())  && !exameCliente.getStatus().equals(Util.getStatusExaminado())){
                    log = new LogExame(funcionario, exameCliente, exameCliente.getStatus(),Util.getStatusExaminado() );
                    facade.cadastraLog(log);

                    exameCliente.setStatusExaminado();
                    facade.exameClienteEditar(exameCliente);
                    JOptionPane.showMessageDialog(null, "Status alterado com sucesso");
                }else{
                    JOptionPane.showMessageDialog(null, "O exame precisa ter cido coletado e nÃ£o pode estÃ¡ extraviado");
                }
            }else
                JOptionPane.showMessageDialog(null, "Status nÃ£o alterado");
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, "Deu PÃ¡ia!");
        }
    }//GEN-LAST:event_jbExaminadoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JfExame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JfExame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JfExame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JfExame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JfExame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    private javax.swing.JButton jbExaminado;
    private javax.swing.JButton jbExtraviado;
    private javax.swing.JButton jbPesquisar;
    private javax.swing.JComboBox jcbFiltro;
    private javax.swing.JTextField jtFuncionario;
    private javax.swing.JTextField jtFuncionarioCargo;
    private javax.swing.JTextField jtPesquisa;
    // End of variables declaration//GEN-END:variables

    private void preencherLista() throws Exception{
        DefaultTableModel dm = (DefaultTableModel) jTable.getModel();
        dm.getDataVector().removeAllElements();
        if(facade.lancamentoListar() != null){
            for (Lancamento l : facade.lancamentoListar())	
                 for(ExameCliente e: l.getListExame())
                     dm.addRow(new Object[] {e.getId(), e.getDataExame(),((e.isUrgencia()) ? "SIM" : "NÃO"), l.getCliente(), e.getExame(), e.getStatus()});
        }else
           JOptionPane.showMessageDialog(null,"Sem exames para listar"); 
    }
    
    private void preencherListaPendente() throws Exception{
        DefaultTableModel dm = (DefaultTableModel) jTable.getModel();
        dm.getDataVector().removeAllElements();
        boolean aux = true;
        if(facade.lancamentoListar() != null){
            for (Lancamento l : facade.lancamentoListar()){	
                 for(ExameCliente e: l.getListExame())
                     if(e.getStatus().equals(Util.getStatusPendente())){
                        dm.addRow(new Object[] {e.getId(), e.getDataExame(),((e.isUrgencia()) ? "SIM" : "NÃO"), l.getCliente(), e.getExame(), e.getStatus()});
                        aux = false;
                     }
            }   
        if(aux){
           limparTabela();
           JOptionPane.showMessageDialog(null,"Nenhum exame pendente"); 
        } 
        }else
           JOptionPane.showMessageDialog(null,"Sem exames para listar"); 
    }
    
    private void preencherListaExaminado() throws Exception{
        DefaultTableModel dm = (DefaultTableModel) jTable.getModel();
        dm.getDataVector().removeAllElements();
        boolean aux = true;
        if(facade.lancamentoListar() != null){
            for (Lancamento l : facade.lancamentoListar()){	
                 for(ExameCliente e: l.getListExame())
                     if(e.getStatus().equals(Util.getStatusExaminado())){
                        dm.addRow(new Object[] {e.getId(), e.getDataExame(),((e.isUrgencia()) ? "SIM" : "NÃO"), l.getCliente(), e.getExame(), e.getStatus()});
                        aux=false;
                     }
            }   
        if(aux){
           limparTabela();
           JOptionPane.showMessageDialog(null,"Nenhum exame Examinado"); 
        } 
        }else
           JOptionPane.showMessageDialog(null,"Sem exames para listar"); 
    }
    
    private void preencherListaColetado() throws Exception{
        DefaultTableModel dm = (DefaultTableModel) jTable.getModel();
        dm.getDataVector().removeAllElements();
        boolean aux = true;
        if(facade.lancamentoListar() != null){
            for (Lancamento l : facade.lancamentoListar()){	
                 for(ExameCliente e: l.getListExame())
                     if(e.getStatus().equals(Util.getStatusColetado())){
                        dm.addRow(new Object[] {e.getId(), e.getDataExame(),((e.isUrgencia()) ? "SIM" : "NÃO"), l.getCliente(), e.getExame(), e.getStatus()});
                        aux=false;
                     }
            }   
        if(aux){
           limparTabela();
           JOptionPane.showMessageDialog(null,"Nenhum exame examinado"); 
        } 
        }else
           JOptionPane.showMessageDialog(null,"Sem exames para listar");
    }
    
    private void preencherListaEntregue() throws Exception{
        DefaultTableModel dm = (DefaultTableModel) jTable.getModel();
        dm.getDataVector().removeAllElements();
        boolean aux = true;
        if(facade.lancamentoListar() != null){
            for (Lancamento l : facade.lancamentoListar()){	
                 for(ExameCliente e: l.getListExame())
                     if(e.getStatus().equals(Util.getStatusEntregue())){
                        dm.addRow(new Object[] {e.getId(), e.getDataExame(),((e.isUrgencia()) ? "SIM" : "NÃO"), l.getCliente(), e.getExame(), e.getStatus()});
                        aux=false;
                     }
            }   
        if(aux){
           limparTabela();
           JOptionPane.showMessageDialog(null,"Nenhum exame entregue"); 
        } 
        }else
           JOptionPane.showMessageDialog(null,"Sem exames para listar");
    }
    
    private void preencherListaExtraviado() throws Exception{
        DefaultTableModel dm = (DefaultTableModel) jTable.getModel();
        dm.getDataVector().removeAllElements();
        boolean aux = true;
        if(facade.lancamentoListar() != null){
            for (Lancamento l : facade.lancamentoListar()){	
                 for(ExameCliente e: l.getListExame())
                     if(e.getStatus().equals(Util.getStatusExtraviado())){
                        dm.addRow(new Object[] {e.getId(), e.getDataExame(),((e.isUrgencia()) ? "SIM" : "NÃO"), l.getCliente(), e.getExame(), e.getStatus()});
                        aux=false;
                     }
            }   
        if(aux){
           limparTabela();
           JOptionPane.showMessageDialog(null,"Nenhum exame extraviado"); 
        } 
        }else
           JOptionPane.showMessageDialog(null,"Sem exames para listar"); 
    }
    
    public void limparTabela(){
        DefaultTableModel dm = (DefaultTableModel) jTable.getModel();
        dm.getDataVector().removeAllElements();
    }
        
    
    public void setFuncionario(Funcionario funcionario) {
        this.funcionario = funcionario;
        if(funcionario!=null){
            jtFuncionario.setText(funcionario.getNome());
            jtFuncionarioCargo.setText(funcionario.getCargo().getNome());
        }else
            dispose();
    } 
}
